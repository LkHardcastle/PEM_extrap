install.packages(c("ggplot2", "cowplot", "tidyr", "dplyr"))
library(ggplot2)
install.packages("KFAS")
library("KFAS")
install.packages("ggsurvfit")
setwd("C:\\Users\\hardc\\Documents\\PEM_extrap")
library(dplyr)
library(tidyverse)
library(rstan)
library(ggplot2)
library(zoo)
#install.packages("survextrap", repos=c('https://chjackson.r-universe.dev',
#                                       'https://cloud.r-project.org'))
library(survextrap)
setwd("C:\\Users\\hardc\\Documents\\PEM_extrap\\Scripts\\Colon")
library(dplyr)
library(tidyverse)
library(rstan)
library(ggplot2)
library(zoo)
#install.packages("survextrap", repos=c('https://chjackson.r-universe.dev',
#                                       'https://cloud.r-project.org'))
library(survextrap)
# Survextrap
install.packages("BayesReversePLLH")
colons
nd_modr1 <- survextrap(Surv(years, status) ~ 1, data=colons, chains=2,
smooth_model = "random_walk",
mspline = list(add_knots=4))
plot(nd_modr1)
library(BayesReversePLLH)
BayesPiecewiseHazard(colons$years, colons$status, 5, 10000)
out <- BayesPiecewiseHazard(colons$years, colons$status, 5, 10000)
View(out)
plot(out)
out[[1]]
out <- BayesPiecewiseHazard(colons$years, colons$status, 5, 200)
out[[1]]
out[[2]]
colons$years
colons$status
out[[1]]
out[[2]]
# Split points
out[[1]]
# log-hazards
out[[2]]
out <- BayesPiecewiseHazard(colons$years, colons$status, 5, 10000)
# No. split points
out[[3]]
# No. split points
plot(out[[3]])
out <- BayesPiecewiseHazard(colons$years, colons$status, 100, 10000)
# Split points
out[[1]]
# log-hazards
out[[2]]
# log-hazards
plot(out[[2]][,1])
# log-hazards
plot(out[[2]][,1], "line")
# log-hazards
plot(out[[2]][,1], linetype = "l")
# log-hazards
plot(out[[2]][,1], type = "l")
out2 <- BayesPiecewiseHazard(c(), c(), 100, 10000)
out2 <- BayesPiecewiseHazard(c(1), c(1), 100, 10000)
out2
out2[[3]]
histogram(out2[[3]])
plot(out2[[3]])
out2[[1]]
out2[[1]][,100]
size(out2[[1]])
dim(out2[[1]])
int <- runif(100)
1-e
int <- ifelse(int_prob < 1-exp(1), 1, ifelse(int_prob < 1-exp(1)*exp(2),2,3))
n <- 100
int_prob <- runif(n)
int <- ifelse(int_prob < 1-exp(1), 1, ifelse(int_prob < 1-exp(1)*exp(2),2,3))
int
1-exp(1)
int <- ifelse(int_prob < 1-exp(-1), 1, ifelse(int_prob < 1-exp(-1)*exp(-2),2,3))
int
cens <- ifelse(int == 3, 0,1)
y <- ifelse(int == 1, runif(1), ifelse(int == 2), runif(1,1,2),3)
y <- ifelse(int == 1, runif(1), ifelse(int == 2, runif(1,1,2),2))
y
plot(y)
y[i] <- ifelse(int == 1, runif(1), ifelse(int == 2, runif(1,1,2), 2))
for(i in 1:100){
y[i] <- ifelse(int == 1, runif(1), ifelse(int == 2, runif(1,1,2), 2))
}
y
plot(y)
plot(y, int)
for(i in 1:100){
y[i] <- ifelse(int == 1, runif(1), ifelse(int == 2, runif(1,min = 1,max = 2), 2))
}
warnings()
?runif
y <- rep(NA,n)
for(i in 1:100){
y[i] <- ifelse(int == 1, runif(1), ifelse(int == 2, runif(1,min = 1,max = 2), 2))
}
y
runif(1, min = 1, max = 2)
y[i] <- ifelse(int == 1, runif(1, min = 0, max = 1), ifelse(int == 2, runif(1,min = 1,max = 2), 2))
for(i in 1:100){
y[i] <- ifelse(int == 1, runif(1, min = 0, max = 1), ifelse(int == 2, runif(1,min = 1,max = 2), 2))
}
y
warnings()
runif(1,min = 1,max = 2)
runif(1,min = 1,max = 2)
runif(1,min = 1,max = 2)
runif(1,min = 1,max = 2)
runif(1,min = 1,max = 2)
runif(1,min = 1,max = 2)
runif(1,min = 1,max = 2)
runif(1,min = 1,max = 2)
runif(1,min = 1,max = 2)
runif(1,min = 1,max = 2)
y[i] <- ifelse(int == 1, runif(min = 0, max = 1), ifelse(int == 2, runif(min = 1,max = 2), 2))
for(i in 1:100){
y[i] <- ifelse(int == 1, runif(min = 0, max = 1), ifelse(int == 2, runif(min = 1,max = 2), 2))
}
for(i in 1:100){
y[i] <- ifelse(int == 1, runif(1,min = 0, max = 1)[1], ifelse(int == 2, runif(1,min = 1,max = 2)[1], 2))
}
warnings()
y
for(i in 1:100){
y[i] <- ifelse(int[i] == 1, runif(1,min = 0, max = 1)[1], ifelse(int[i] == 2, runif(1,min = 1,max = 2)[1], 2))
}
y
n <- 100
int_prob <- runif(n)
int <- ifelse(int_prob < 1-exp(-1), 1, ifelse(int_prob < 1-exp(-1)*exp(-2),2,3))
cens <- ifelse(int == 3, 0,1)
y <- rep(NA,n)
for(i in 1:100){
y[i] <- ifelse(int[i] == 1, runif(1,min = 0, max = 1)[1], ifelse(int[i] == 2, runif(1,min = 1,max = 2)[1], 2))
}
out2 <- BayesPiecewiseHazard(y, cens, 5, 10000)
out2
out2[[1]]
out2[[3]]
plot(out2[[3]])
n <- 100
int_prob <- runif(n)
int <- ifelse(int_prob < 1-exp(-1), 1, ifelse(int_prob < 1-exp(-1)*exp(-1.1),2,3))
cens <- ifelse(int == 3, 0,1)
y <- rep(NA,n)
for(i in 1:100){
y[i] <- ifelse(int[i] == 1, runif(1,min = 0, max = 1)[1], ifelse(int[i] == 2, runif(1,min = 1,max = 2)[1], 2))
}
out2 <- BayesPiecewiseHazard(y, cens, 5, 10000)
plot(out2[[3]])
n <- 100
int_prob <- runif(n)
int <- ifelse(int_prob < 1-exp(-1), 1, ifelse(int_prob < 1-exp(-1)*exp(-1.1),2,3))
cens <- ifelse(int == 3, 0,1)
y <- rep(NA,n)
for(i in 1:100){
y[i] <- ifelse(int[i] == 1, runif(1,min = 0, max = 1)[1], ifelse(int[i] == 2, runif(1,min = 1,max = 2)[1], 2))
}
out2 <- BayesPiecewiseHazard(y, cens, 5, 1000000)
plot(out2[[3]])
